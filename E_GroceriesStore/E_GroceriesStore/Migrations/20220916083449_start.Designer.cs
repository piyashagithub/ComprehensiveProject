// <auto-generated />
using System;
using E_GroceriesStore.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace E_GroceriesStore.Migrations
{
    [DbContext(typeof(E_GroceryStoreDbContext))]
    [Migration("20220916083449_start")]
    partial class start
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.29")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("E_GroceriesStore.Models.BuyModel", b =>
                {
                    b.Property<int>("BuyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("GroceryId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("BuyId");

                    b.HasIndex("GroceryId");

                    b.HasIndex("UserId");

                    b.ToTable("BuyModel");
                });

            modelBuilder.Entity("E_GroceriesStore.Models.CartModel", b =>
                {
                    b.Property<int>("CartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("GroceryId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("CartId");

                    b.HasIndex("GroceryId");

                    b.HasIndex("UserId");

                    b.ToTable("CartModel");
                });

            modelBuilder.Entity("E_GroceriesStore.Models.GroceryModel", b =>
                {
                    b.Property<int>("GroceryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("GroceryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.HasKey("GroceryId");

                    b.ToTable("GroceryModel");
                });

            modelBuilder.Entity("E_GroceriesStore.Models.LoginModel", b =>
                {
                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserName");

                    b.ToTable("LoginModel");
                });

            modelBuilder.Entity("E_GroceriesStore.Models.OrderModel", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("GroceryId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("OrderId");

                    b.HasIndex("GroceryId");

                    b.HasIndex("UserId");

                    b.ToTable("OrderModel");
                });

            modelBuilder.Entity("E_GroceriesStore.Models.RatingModel", b =>
                {
                    b.Property<int>("RatingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("GroceryId")
                        .HasColumnType("int");

                    b.Property<string>("Rating")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("RatingId");

                    b.HasIndex("GroceryId");

                    b.HasIndex("UserId");

                    b.ToTable("RatingModel");
                });

            modelBuilder.Entity("E_GroceriesStore.Models.ResponseModel", b =>
                {
                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Message");

                    b.ToTable("ResponseModel");
                });

            modelBuilder.Entity("E_GroceriesStore.Models.UserModel", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Phone")
                        .HasColumnType("float");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("UserModel");
                });

            modelBuilder.Entity("E_GroceriesStore.Models.BuyModel", b =>
                {
                    b.HasOne("E_GroceriesStore.Models.GroceryModel", "grocery")
                        .WithMany()
                        .HasForeignKey("GroceryId");

                    b.HasOne("E_GroceriesStore.Models.UserModel", "user")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("E_GroceriesStore.Models.CartModel", b =>
                {
                    b.HasOne("E_GroceriesStore.Models.GroceryModel", "grocery")
                        .WithMany()
                        .HasForeignKey("GroceryId");

                    b.HasOne("E_GroceriesStore.Models.UserModel", "user")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("E_GroceriesStore.Models.OrderModel", b =>
                {
                    b.HasOne("E_GroceriesStore.Models.GroceryModel", "grocery")
                        .WithMany()
                        .HasForeignKey("GroceryId");

                    b.HasOne("E_GroceriesStore.Models.UserModel", "user")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("E_GroceriesStore.Models.RatingModel", b =>
                {
                    b.HasOne("E_GroceriesStore.Models.GroceryModel", "grocery")
                        .WithMany()
                        .HasForeignKey("GroceryId");

                    b.HasOne("E_GroceriesStore.Models.UserModel", "user")
                        .WithMany()
                        .HasForeignKey("UserId");
                });
#pragma warning restore 612, 618
        }
    }
}
